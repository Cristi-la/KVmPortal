services:
  web:
    build:
      context: ./app
      dockerfile: ./Doc.web.backend
    command: /django.sh
    volumes:
      - ./app/:/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis

  db:
    image: postgres:17
    volumes:
      # To persist the data beyond the life of the container.
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.dev
    ports:
      - 5433:5432

  #  Cache efficency, task broker
  redis:
    restart: always
    image: redis:7.2.4
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # # Run bacground tasks
  celery_worker:
    build:
      context: ./app
      dockerfile: ./Doc.web.backend
    command: /celery_worker.sh
    volumes:
      - ./app/:/app/
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - db

  celery_beat:
    build:
      context: ./app
      dockerfile: ./Doc.web.backend
    command: /celery_beat.sh
    volumes:
      - ./app/:/app/
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - db

  # react_dev:
  #   build:
  #     context: ./app
  #     dockerfile: ./Doc.web.frontend
  #   command: npm run dev
  #   volumes:
  #     - ./app/:/app/
  #   env_file:
  #     - ./.env.dev
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - redis
  #     - db
  #     - web

volumes:
  postgres_data:
  redis_data:
