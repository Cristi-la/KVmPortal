# Generated by Django 5.0.7 on 2024-10-06 16:02

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('kvm', '0014_hypervisor_uuid_alter_auth_path_alter_vm_state_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='hypervisor',
            name='arch',
            field=models.CharField(blank=True, help_text='The CPU architecture used by the host, which determines the instruction set architecture (ISA) available to virtual machines (VMs).', max_length=16, null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='microcode_version',
            field=models.CharField(blank=True, help_text='The microcode version of the CPU. Microcode updates provide patches at the CPU firmware level, including virtualization bug fixes and feature enhancements relevant to KVM.', max_length=16, null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='model',
            field=models.CharField(blank=True, help_text='The specific CPU model, which can affect the feature set and performance characteristics available to VMs.', max_length=64, null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='signature_family',
            field=models.CharField(blank=True, help_text='The CPU signature family, which identifies the processor family and helps determine compatibility with certain KVM features or instructions.', max_length=16, null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='signature_model',
            field=models.CharField(blank=True, help_text='The CPU signature model, identifying the specific CPU model within a family. This can affect the availability of certain virtualization instructions for KVM guests.', max_length=16, null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='signature_stepping',
            field=models.CharField(blank=True, help_text='The CPU stepping value, which indicates the revision of the processor. Certain virtualization features or improvements may only be available on specific steppings.', max_length=16, null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='topology_clusters',
            field=models.IntegerField(blank=True, help_text='The number of clusters per die. Clusters help group CPU cores, and understanding this helps configure advanced CPU topology for KVM guests.', null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='topology_cores',
            field=models.IntegerField(blank=True, help_text='The number of CPU cores available per socket. This helps determine how many virtual CPUs (vCPUs) can be allocated to KVM guests and the configuration of those vCPUs.', null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='topology_dies',
            field=models.IntegerField(blank=True, help_text='The number of dies per socket. A die is a single continuous piece of silicon that contains the CPU cores. This helps configure virtual CPU topology in KVM.', null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='topology_sockets',
            field=models.IntegerField(blank=True, help_text='The number of physical CPU sockets. In KVM, this is useful for assigning specific sockets to virtual machines to improve CPU topology awareness in the guest.', null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='topology_threads',
            field=models.IntegerField(blank=True, help_text='The number of threads per core, which indicates the hyper-threading capability of the CPU. Virtual machines can take advantage of this to increase the number of vCPUs per core.', null=True),
        ),
        migrations.AddField(
            model_name='hypervisor',
            name='vendor',
            field=models.CharField(blank=True, help_text="The CPU vendor, such as 'Intel' or 'AMD'. This is crucial in determining the set of virtualization features supported by the processor.", max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='hypervisor',
            name='uuid',
            field=models.CharField(blank=True, help_text='A unique identifier for the host system, which can be used to track the machine across reboots or virtual machine (VM) configurations.', max_length=64, null=True),
        ),
    ]
