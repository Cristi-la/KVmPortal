"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from kombu import Queue, Exchange
from datetime import timedelta

# UTILS DATA
BASE_DIR = Path(__file__).resolve().parent.parent
REDIS_IP = '127.0.0.1'
REDIS_PORT = 6379
REDIS_CELERY_DB = 0
REDIS_CONSUMER_DB = 1
REDIS_CONTROLER_DB = 2
REDIS_DEFENDER_DB = 3
REDIS_COMON_CACHE = 4

################################
#  ###### SECURITY SETTINGS
################################
SECRET_KEY = 'django-insecure-wmt@)!=uf-u%=ppcu4v@2oe3kz_%=pf+id_=41-dw3!^qn+y#i'
DEBUG = True
# Django-defender
DEFENDER_LOGIN_FAILURE_LIMIT = 10
DEFENDER_COOLOFF_TIME = 300  # 5 minutes
DEFENDER_LOCKOUT_TEMPLATE = "lockout.html"
DEFENDER_REDIS_URL = f'redis://{REDIS_IP}:{REDIS_PORT}/{REDIS_DEFENDER_DB}'
ALLOWED_HOSTS = []
SITE_ID = 1
ADMINS = (("Admin", "foo@example.com"),)
AUTH_USER_MODEL = "acc.Account"

################################
#  ###### Apps section
################################
MY_APPS = [
    'apps.common',
    'apps.acc',
    'apps.term',
    'apps.kvm',
]

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    'webpack_loader',
    'django_celery_results',
    'django_celery_beat',
    
    'channels',
    'defender',

    'django_filters',
    'rest_framework',
    'rest_framework_simplejwt.token_blacklist',
    'drf_spectacular',

    *MY_APPS,
]


MIDDLEWARE = [
    'django.middleware.gzip.GZipMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # "csp.middleware.CSPMiddleware",
    # 'defender.middleware.FailedLoginMiddleware',
]



################################
#  ###### REST API SETTINGS
################################
REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "apps.common.pagination.StandardResultsSetPagination",
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",

    "DEFAULT_AUTHENTICATION_CLASSES": [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated",],
}

SPECTACULAR_SETTINGS = {
    "TITLE": "WKVM API",
    "DESCRIPTION": "Web KVM API",
    "VERSION": "0.1.0",
    "SERVE_INCLUDE_SCHEMA": False,
}
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(seconds=5),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": False,

    "ALGORITHM": "HS256",
    "VERIFYING_KEY": "",
    "AUDIENCE": None,
    "ISSUER": None,
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "apps.acc.authentication.account_authentication_rule",

    "AUTH_TOKEN_CLASSES": (
        "rest_framework_simplejwt.tokens.AccessToken",
    ),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),

    "TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainPairSerializer",
    "TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSerializer",
    "TOKEN_VERIFY_SERIALIZER": "rest_framework_simplejwt.serializers.TokenVerifySerializer",
    "TOKEN_BLACKLIST_SERIALIZER": "rest_framework_simplejwt.serializers.TokenBlacklistSerializer",
    "SLIDING_TOKEN_OBTAIN_SERIALIZER": "rest_framework_simplejwt.serializers.TokenObtainSlidingSerializer",
    "SLIDING_TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSlidingSerializer",
}


################################
#  ###### Django core settings
################################
ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


ASGI_APPLICATION = 'backend.asgi.application'
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Europe/Warsaw'
USE_I18N = True
USE_TZ = True

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "../frontend/static"
]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



################################
#  ## DJANGO CHANNELS SETTINGS
################################
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.pubsub.RedisPubSubChannelLayer",
        "CONFIG": {
            "hosts":[{
                "address": f'redis://{REDIS_IP}:{REDIS_PORT}',
                "db": REDIS_CONSUMER_DB,
            }]
        }
    }
}


# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.redis.RedisCache',
#         'LOCATION': f'redis://{REDIS_IP}:{REDIS_PORT}/{REDIS_COMON_CACHE}'
#     }
# }
################################
#  ###### Celery settings
################################
REDIS_URL = f'redis://{REDIS_IP}:{REDIS_PORT}/{REDIS_CELERY_DB}'
CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = REDIS_URL

# Queues
CELERY_TASK_QUEUES = (
    Queue('critical', Exchange('critical'), routing_key='critical'),
    Queue('medium', Exchange('medium'), routing_key='medium'),
    Queue('low', Exchange('low'), routing_key='low'),
)
CELERY_TASK_DEFAULT_QUEUE = 'medium'

# Task settings
CELERY_TIMEZONE = TIME_ZONE
CELERY_ENABLE_UTC = True
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True
CELERY_RESULT_EXTENDED = True
CELERY_TASK_TRACK_STARTED = True
# CELERY_TASK_TIME_LIMIT = 30 * 60


# CELERY_TASK_ALWAYS_EAGER = False
# CELERY_TASK_EAGER_PROPAGATES = False















# Webpack
WEBPACK_LOADER = {
    "DEFAULT": {
        "CACHE": DEBUG,
        "STATS_FILE": BASE_DIR / "../frontend/webpack-stats.json",
        "POLL_INTERVAL": 0.1,
        "IGNORE": [r".+\.hot-update.js", r".+\.map"],
    }
}



# Django-CSP
# CSP_INCLUDE_NONCE_IN = ["script-src", "style-src", "font-src"]
# CSP_SCRIPT_SRC = [
#     "'self'",
#     "'unsafe-inline'",
#     "'unsafe-eval'",
#     # drf-spectacular UI (Swagger and ReDoc)
#     "https://cdn.jsdelivr.net/npm/swagger-ui-dist@latest/",
#     "https://cdn.jsdelivr.net/npm/redoc@latest/",
#     "blob:",
# ] + [f"*{host}" if host.startswith(".") else host for host in ALLOWED_HOSTS]
# CSP_CONNECT_SRC = [
#     "'self'",
# ] + [f"*{host}" if host.startswith(".") else host for host in ALLOWED_HOSTS]
# CSP_STYLE_SRC = [
#     "'self'",
#     "'unsafe-inline'",
#     # drf-spectacular UI (Swagger and ReDoc)
#     "https://cdn.jsdelivr.net/npm/swagger-ui-dist@latest/",
#     "https://cdn.jsdelivr.net/npm/redoc@latest/",
#     "https://fonts.googleapis.com",
# ]
# CSP_FONT_SRC = [
#     "'self'",
#     "'unsafe-inline'",
#     # drf-spectacular UI (Swagger and ReDoc)
#     "https://fonts.gstatic.com",
# ] + [f"*{host}" if host.startswith(".") else host for host in ALLOWED_HOSTS]
# CSP_IMG_SRC = [
#     "'self'",
#     # drf-spectacular UI (Swagger and ReDoc)
#     "data:",
#     "https://cdn.jsdelivr.net/npm/swagger-ui-dist@latest/",
#     "https://cdn.redoc.ly/redoc/",
# ]


# LOCAL_HOST_URL = "http://localhost:3000"
# LOCAL_HOST_WS_URL = "ws://localhost:3000/ws"
# CSP_SCRIPT_SRC += [LOCAL_HOST_URL, LOCAL_HOST_WS_URL]
# CSP_CONNECT_SRC += [LOCAL_HOST_URL, LOCAL_HOST_WS_URL]
# CSP_FONT_SRC += [LOCAL_HOST_URL]
# CSP_IMG_SRC += [LOCAL_HOST_URL]






# Static files handlers (CSS, JavaScript, Images)
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
                # "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}



# # Logging
# LOGGING = {
#     "version": 1,
#     "disable_existing_loggers": False,
#     "formatters": {
#         "standard": {
#             "format": "%(levelname)-8s [%(asctime)s] [%(correlation_id)s] %(name)s: %(message)s"
#         },
#     },
#     "handlers": {
#         "console": {
#             "level": "DEBUG",
#             "class": "logging.StreamHandler",
#             "formatter": "standard",
#         },
#     },
#     "loggers": {
#         "": {"handlers": ["console"], "level": "INFO"},
#         "celery": {"handlers": ["console"], "level": "INFO"},
#         "django_guid": {
#             "handlers": ["console"],
#             "level": "WARNING",
#             "propagate": False,
#         },
#     },
# }




